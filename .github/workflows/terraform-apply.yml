name: Terraform Apply

on:
  workflow_dispatch:
    inputs:
      infra_env:
        type: choice
        description: 'Select Subscription'
        options:
          - 'CEQ-DEVOPS-SANDBOX'
    
permissions:
   contents: read
          
jobs:
  terraform:
    name: "Terraform Scan & Plan"
    runs-on: ubuntu-latest

    permissions:
      contents: read
      security-events: write
      actions: read
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup git global config
        run: git config --global url."https://oauth2:${{secrets.VK_TOKEN}}@github.com".insteadOf https://github.com

      # - name: Install Terrascan
      #   run: |
      #     curl --location https://github.com/accurics/terrascan/releases/download/v1.9.0/terrascan_1.9.0_Linux_x86_64.tar.gz --output terrascan.tar.gz
      #     tar -xf terrascan.tar.gz terrascan
      #     rm terrascan.tar.gz
      #     sudo mv terrascan /usr/local/bin/

      # - name: Run Terrascan Scan
      #   run: terrascan scan -t gcp -i terraform    

      - name: Install Prowler
        run: |
           pip install prowler
           export PATH=$PATH:/home/$HOME/.local/bin/
           prowler -v
      - name: Save GCP Credentials to File
        run: echo '${{ secrets.GCP_SC_KEY }}' > $HOME/gcp_credentials.json

      - name: Run Prowler
        run: prowler gcp --credentials-file $HOME/gcp_credentials.json 
        # run: prowler gcp --services cloudsql --credentials-file $HOME/gcp_credentials.json --ignore-exit-code-3 --verbose --output-format csv --output-file prowler-output.csv
        continue-on-error: true

      - name: Upload Prowler Results
        uses: actions/upload-artifact@v4
        with:
          # name: prowler-results
          # path: /home/runner/work/ceq_tf_module_gcp_war_Postgresql_sample/ceq_tf_module_gcp_war_Postgresql_sample/output/compliance/
          name: prowler-output
          path: /home/runner/work/ceq_tf_module_gcp_war_Postgresql_sample/ceq_tf_module_gcp_war_Postgresql_sample/output/prowler-output.csv.csv
  

      # - name: Test the checkov
      #   id: checkov
      #   uses: bridgecrewio/checkov-action@master
      #   with:
      #     directory: . 
      #     framework: terraform
          

      - name: Install Infracost
        run: |
          curl -fsSL https://raw.githubusercontent.com/infracost/infracost/master/scripts/install.sh | sh
          infracost --version

      - name: Infra Auth
        env:
          INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}
        run: |
           infracost configure set api_key $INFRACOST_API_KEY
      - name: Run Infracost   
        run:  |
           infracost breakdown --path .
          
      - name: "Setting Environment"
        env:
         INFRA_ENV: ${{ github.event.inputs.infra_env }}
        run: |
          if [ "$INFRA_ENV" == "CEQ-DEVOPS-SANDBOX" ]; then
           echo "project_id=ceq-devops-sandbox" >> $GITHUB_ENV
           echo "ENV=sandbox" >> $GITHUB_ENV
           echo "bucket=gcp_pod_statefile" >> $GITHUB_ENV
           echo "prefix=gcp-war\terraformfile" >> $GITHUB_ENV
          elif [ "$INFRA_ENV" == "nonprod" ]; then
            echo "project_id=ceq-devops-sandbox" >> $GITHUB_ENV
            echo "ENV=nonprod" >> $GITHUB_ENV
            echo "bucket=gcp_pod_statefile" >> $GITHUB_ENV
            echo "prefix=gcp-war\terraformfile" >> $GITHUB_ENV
          else
             echo "environment not supported"
             exit 1
          fi

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest
          terraform_wrapper: false

      - name: Login to GCP
        uses: 'google-github-actions/auth@v2'
        with:
         credentials_json: '${{ secrets.GCP_SC_KEY }}'

          
      - name: Terraform Init
        run: terraform init -reconfigure -force-copy -backend-config="bucket=$bucket" -backend-config="prefix=$prefix" -input=false
        env:
         GOOGLE_CREDENTIALS: ${{ secrets.GCP_SC_KEY }}

      - name: Terraform Plan
        run: terraform plan
        


  terraformApply: 
   name: 'terraformApply'
   runs-on: ubuntu-latest
   needs: ["terraform"]
   environment:
       name: terraform_apply
   defaults:
     run:
      shell: bash

   steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: "Setting Environment"
        env:
         INFRA_ENV: ${{ github.event.inputs.infra_env }}
        run: |
          if [ "$INFRA_ENV" == "CEQ-DEVOPS-SANDBOX" ]; then
           echo "project_id=" >> $GITHUB_ENV
           echo "ENV=sandbox" >> $GITHUB_ENV
           echo "bucket=gcp_pod_statefile" >> $GITHUB_ENV
           echo "prefix=gcp-war\terraformfile" >> $GITHUB_ENV
          elif [ "$INFRA_ENV" == "nonprod" ]; then
            echo "project_id=" >> $GITHUB_ENV
            echo "ENV=nonprod" >> $GITHUB_ENV
            echo "bucket=gcp_pod_statefile" >> $GITHUB_ENV
            echo "prefix=gcp-war\terraformfile" >> $GITHUB_ENV
          else
             echo "environment not supported"
             exit 1
          fi
      - name: Setup git global config
        run: git config --global url."https://oauth2:${{secrets.VK_TOKEN}}@github.com".insteadOf https://github.com


      - name: Terraform Init
        run: terraform init -reconfigure -force-copy -backend-config="bucket=$bucket" -backend-config="prefix=$prefix" -input=false
        env:
         GOOGLE_CREDENTIALS: ${{ secrets.GCP_SC_KEY }}
       

      - name: Terraform Apply 
        run: terraform apply -auto-approve 
        env:
         GOOGLE_CREDENTIALS: ${{ secrets.GCP_SC_KEY }}

 
